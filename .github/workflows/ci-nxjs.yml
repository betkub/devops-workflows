name: CI NxJS Workflow

on:
  workflow_call:
    inputs:
      service_name:
        description: "Path in apps"
        required: true
        type: string
      image_repository:
        description: "Docker repository."
        required: true
        type: string
      image_tag:
        description: "Docker image tag."
        required: true
        type: string
    outputs:
      image:
        description: "Docker image."
        value: ${{ jobs.build.outputs.image }}

jobs:
  build:
    runs-on: [ubuntu-20.04]
    outputs:
      image: ${{ steps.build-image.outputs.image }}
    steps:
      - name: Clean Workspace
        uses: AutoModality/action-clean@v1.1.0

      - name: Checkout
        id: checkout
        uses: actions/checkout@v3

      - name: Checkout utils
        if: ${{ inputs.is_submodule }}
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.util_repository }}
          token: ${{ secrets.PAT }} # `GitHub_PAT` is a secret
          path: ${{ inputs.util_path }}
          ref: ${{ inputs.util_branch }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Install node package
        run: |
          yarn

      - name: Build
        run: |
          yarn run build ${{ inputs.service_name }}
          yarn deploy ${{ inputs.service_name }} --ecr-registry="${{ steps.login-ecr.outputs.registry }}" --tag="${{ inputs.image_tag }}"

      - name: Publish docker images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ inputs.image_repository }}
          IMAGE_TAG: ${{ inputs.image_tag }}
          SERVICE_NAME: ${{ inputs.service_name }}
        run: |
          docker push $ECR_REGISTRY/$REPOSITORY-$SERVICE_NAME:$IMAGE_TAG
