name: CD workflow

on:
  workflow_call:
    inputs:
      is_production:
        description: "Is production."
        default: false
        required: false
        type: boolean
      service_name:
        description: "Service name."
        required: true
        type: string
      image_tag:
        description: "Docker image tag."
        required: true
        type: string
      helm_path:
        description: "Helm path"
        required: true
        type: string
      chart_name:
        description: "Helm chart name"
        required: true
        type: string
      argo_repo:
        description: "Argocd repository."
        required: true
        type: string
      use_helm_dependency:
        description: "Deploy with helm dependency"
        default: false
        required: false
        type: boolean
jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-20.04
    env:
      GIT_EMAIL: action@github.com
      GIT_NAME: ${{ github.actor }}
      GIT_TARGET_REPO: "${{ github.repository_owner }}/${{ inputs.argo_repo }}"
      GIT_BASE_BRANCH: main
      SERVICE_NAME: ${{ inputs.service_name }}
      IMAGE_TAG: ${{ inputs.image_tag }}
      HELM_PATH: ${{ inputs.helm_path }}
      CHART_NAME: ${{ inputs.chart_name }}
      USE_HELM_DEPENDENCY: ${{ inputs.use_helm_dependency }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ env.GIT_TARGET_REPO }}
          token: ${{ secrets.PAT }}

      - name: Config git
        run: |
          git config --global user.email "$GIT_EMAIL"
          git config --global user.name "$GIT_NAME"

      - name: Checkout new branch
        if: ${{ inputs.is_production }}
        env:
          GIT_BRANCH: "deploy/${{ env.SERVICE_NAME }}-${{ env.IMAGE_TAG }}"
        run: |
          git checkout -b $GIT_BRANCH

      - name: Commit Gitops ArgoCD
        run: |
          cd ${{ env.HELM_PATH }}
          if [[ ${{ env.USE_HELM_DEPENDENCY }} == true ]]; then
            yq e ".${{ env.CHART_NAME }}.image.tag=\"${{ env.IMAGE_TAG }}\"" -i values.yaml
          else
            yq e ".image.tag=\"${{ env.IMAGE_TAG }}\"" -i values.yaml
          fi
          git pull
          git add .
          git commit -m "Update ${{ env.SERVICE_NAME }} version ${{ env.IMAGE_TAG }}"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Deploy nonprod
        if: ${{ !inputs.is_production }}
        run: |
          git pull
          git push origin $GIT_BASE_BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Deploy prod
        if: ${{ inputs.is_production }}
        shell: bash
        env:
          GIT_BRANCH: "deploy/${{ env.SERVICE_NAME }}-${{ env.IMAGE_TAG }}"
          GITHUB_TOKEN: ${{ secrets.PAT }}
          GIT_PULL_REQUEST: "Deploy ${{ env.SERVICE_NAME }} ${{ env.IMAGE_TAG }}"
        run: |
          if [[ `git --no-pager log "$GIT_BASE_BRANCH..$GIT_BRANCH" --decorate=short --pretty=oneline -n1` ]]; then
            git push origin $GIT_BRANCH
            hub pull-request --base $GIT_BASE_BRANCH -m "$GIT_PULL_REQUEST"
          else
            echo 'No changes'
          fi
